import random

from database import *
from plugin_system import Plugin

plugin = Plugin('–ü–æ–ª–µ —á—É–¥–µ—Å',
                usage=['–ø–æ–ª–µ —á—É–¥–µ—Å - —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∏–≥—Ä—É',
                       '–ø–æ–ª–µ —á—É–¥–µ—Å –æ—á–∫–∏ - —á—Ç–æ–±—ã –ø–æ–∫–∞–∑–∞—Ç—å –≤–∞—à–∏ —Ç–µ–∫—É—â–∏–µ –æ—á–∫–∏ –∑–∞ –∏–≥—Ä—ã',
                       '–ø–æ–ª–µ —á—É–¥–µ—Å —Å–¥–∞—é—Å—å - —á—Ç–æ–±—ã –∑–∞–∫–æ–Ω—á–∏—Ç—å –∏–≥—Ä—É'])


class FOMData(BaseModel):
    user_id = peewee.BigIntegerField(unique=True)

    lives = peewee.IntegerField(null=True)
    answer = peewee.TextField(null=True)
    description = peewee.TextField(null=True)

    cheating = peewee.BooleanField(default=False)

    open = peewee.TextField(null=True)

    score = peewee.IntegerField(default=0)


FOMData.create_table(True)


@plugin.on_message(status=1)
async def letter1(msg, args):
    if not await plugin.is_mine(msg.user):
        return

    cl = msg.text.strip().lower()

    d = await get_or_none(FOMData, user_id=msg.user_id)

    if not d:
        await plugin.clear_user(msg.user)

        return await msg.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞!")

    if cl == d.answer:
        score = max(len(set(d.answer)) - len(d.open), 1)

        d.score += score
        await db.update(d)

        await plugin.clear_user(msg.user)

        return await msg.answer(f"üëç –í—ã —É–≥–∞–¥–∞–ª–∏! –û—Ç–≤–µ—Ç: \"{d.answer}\"!\n"
                                f"üëè –í–∞—à–∏ –∑–∞—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ –æ—á–∫–∏: {score}.\n"
                                f"üéâ –í—Å–µ–≥–æ –æ—á–∫–æ–≤: {d.score}")

    if len(cl) != 1:
        if d.cheating:
            d.lives -= 1
            await db.update(d)

            return await msg.answer("üí¨ –ù–∞–∑–æ–≤–∏—Ç–µ –æ–¥–Ω—É –±—É–∫–≤—É –∏–ª–∏ –æ—Ç–≤–µ—Ç!\n"
                                    f"–ñ–∏–∑–Ω–∏: {'<3 ' * d.lives}\n"
                                    f"üëâ \"{d.description}\"")

        else:
            d.cheating = True
            await db.update(d)

        return await msg.answer("üí¨ –ù–∞–∑–æ–≤–∏—Ç–µ –æ–¥–Ω—É –±—É–∫–≤—É –∏–ª–∏ –æ—Ç–≤–µ—Ç!\n"
                                f"üëâ \"{d.description}\"")

    if cl in d.open:
        return await msg.answer("üóø –í—ã —É–∂–µ –Ω–∞–∑—ã–≤–∞–ª–∏ —ç—Ç—É –±—É–∫–≤—É!\n"
                                "üí¨ –ù–∞–∑–æ–≤–∏—Ç–µ –±—É–∫–≤—É –∏–ª–∏ –æ—Ç–≤–µ—Ç!")

    d.open += cl

    current = ""
    done = True
    for l in d.answer:
        if l == " ":
            current += "_"
            continue

        if l in d.open:
            current += l

        else:
            current += "*"
            done = False

    if done:
        d.score += 1
        await db.update(d)

        await plugin.clear_user(msg.user)

        return await msg.answer(f"üëç –í—ã –æ—Ç–≤–µ—Ç–∏–ª–∏ –≤–µ—Ä–Ω–æ! –°–ª–æ–≤–æ: \"{d.answer}\"!\n"
                                f"üëè –í–∞—à–∏ –∑–∞—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ –æ—á–∫–∏: 1.\n"
                                f"üéâ –í—Å–µ–≥–æ –æ—á–∫–æ–≤: {d.score}")

    if cl not in d.answer:
        d.lives -= 1
        d.cheating = False
        await db.update(d)

        if d.lives < 1:
            await plugin.clear_user(msg.user)

            return await msg.answer(f"üëã –í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏! –û—Ç–≤–µ—Ç: \"{d.answer}\"!\n")

        return await msg.answer(f"üëã –¢–∞–∫–æ–π –±—É–∫–≤—ã –Ω–µ—Ç!\n"
                                f"{' '.join(current)}\n"
                                f"–ñ–∏–∑–Ω–∏: {'<3 ' * d.lives}\n\n"
                                f"üí¨ –ù–∞–∑–æ–≤–∏—Ç–µ –±—É–∫–≤—É –∏–ª–∏ –æ—Ç–≤–µ—Ç!\n"
                                f"üëâ \"{d.description}\"")

    d.cheating = False
    await db.update(d)

    return await msg.answer(f"üëã –ë—É–∫–≤–∞ –µ—Å—Ç—å –≤ —Å–ª–æ–≤–µ!\n"
                            f"{' '.join(current)}\n"
                            f"–ñ–∏–∑–Ω–∏: {'<3 ' * d.lives}\n\n"
                            f"üí¨ –ù–∞–∑–æ–≤–∏—Ç–µ –±—É–∫–≤—É –∏–ª–∏ –æ—Ç–≤–µ—Ç!\n"
                            f"üëâ \"{d.description}\"")


@plugin.on_command('–ø–æ–ª–µ —á—É–¥–µ—Å')
async def main(msg, args):
    r, m = await plugin.lock(msg.user)

    if not r:
        return await msg.answer(m)

    v = random.choice(variants)

    u, c = await db.get_or_create(FOMData, user_id=msg.user_id)
    u.answer = v[1]
    u.description = v[0]
    u.open = ""
    u.lives = max(3, int(len(u.answer) * 0.7))
    await db.update(u)

    parts = [" *" * len(p) for p in u.answer.split()]

    result = " _".join(parts)[1:]

    await msg.answer(f"üí≠ –ó–∞–≥–∞–¥–∫–∞:\n"
                     f"üëâ {u.description}\n"
                     f"{result}\n"
                     f"üí¨ –ù–∞–∑–æ–≤–∏—Ç–µ –±—É–∫–≤—É –∏–ª–∏ –æ—Ç–≤–µ—Ç!")

    await plugin.set_user_status(msg.user, 1)


@plugin.on_command('–ø–æ–ª–µ —á—É–¥–µ—Å —Å–¥–∞—é—Å—å', '–ø–æ–ª–µ —á—É–¥–µ—Å —Å–¥–∞—Ç—å—Å—è')
async def give_up(msg, args):
    if plugin.is_mine(msg.user):
        await plugin.clear_user(msg.user)

        d = await get_or_none(FOMData, user_id=msg.user_id)
        if d:
            await msg.answer(f"–í–∞—à–µ —Å–ª–æ–≤–æ: \"{d.answer}\"")

    await plugin.set_user_status(msg.user, 1)


@plugin.on_command('–ø–æ–ª–µ —á—É–¥–µ—Å –æ—á–∫–∏', '–ø–æ–ª–µ —á—É–¥–µ—Å —Å—á—ë—Ç')
async def show_score(msg, args):
    d = await get_or_none(FOMData, user_id=msg.user_id)

    if d:
        return await msg.answer(f"–í–∞—à–∏ –æ—á–∫–∏: \"{d.score}\"")

    await msg.answer(f"–í—ã –Ω–µ –∏–≥—Ä–∞–ª–∏!")


variants = [
    ("–ì–æ—Ä–æ–¥ –≤ –ë—Ä–∞–∑–∏–ª–∏–∏, —Å—Ç–æ–ª–∏—Ü–∞ —à—Ç–∞—Ç–∞ –ë–∞–∏—è", "—Å–∞–ª–≤–∞–¥–æ—Ä"),
    ("–§–∞–π–ª–æ–≤—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä —Å –∑–∞–∫—Ä—ã—Ç—ã–º –∏—Å—Ö–æ–¥–Ω—ã–º –∫–æ–¥–æ–º, —Ä–∞–±–æ—Ç–∞—é—â–∏–π –Ω–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ Microsoft Windows.", "–¥–∏—Å–∫–æ –∫–æ–º–∞–Ω–¥–∏—Ä"),
    ("–ù–µ–º–µ—Ü–∫–∞—è —Å–∏–Ω—Ç–∏-–ø–æ–ø –∏ –ø–æ–ø-—Ä–æ–∫ –≥—Ä—É–ø–ø–∞, –æ–±—Ä–∞–∑–æ–≤–∞–Ω–Ω–∞—è –≤ 2001 –≥–æ–¥—É –≤ –ú–∞–≥–¥–µ–±—É—Ä–≥–µ.", "tokio hotel"),
    ("–ü—Ä–æ–≥—Ä–∞–º–º–∞, –ø–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞—é—â–∞—è –∫–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º—ã –Ω–∞ —è–∑—ã–∫–µ C++ –∫ –∫–æ–º–ø–∏–ª—è—Ü–∏–∏.", "–ø—Ä–µ–ø—Ä–æ—Ü–µ—Å—Å–æ—Ä"),
    ("–§–∏–ª—å–º —É–∂–∞—Å–æ–≤ 1975 –≥–æ–¥–∞ —Ä–µ–∂–∏—Å—Å—ë—Ä–∞ –ú–∞—Ä–∏–æ –°–∏—á–∏–ª—å—è–Ω–æ.", "–¥—å—è–≤–æ–ª—å—Å–∫–∏–π –≥–ª–∞–∑"),
    ("–ö—É—Ö–Ω—è –∫–∞–∑–∞–∫–æ–≤.", "–∫–∞–∑–∞—á—å—è –∫—É—Ö–Ω—è"),
    ("–ë–∏–Ω–∞—Ä–Ω–æ–µ –Ω–µ–æ—Ä–≥–∞–Ω–∏—á–µ—Å–∫–æ–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –ø–ª–∞—Ç–∏–Ω—ã –∏ –∞–ª—é–º–∏–Ω–∏—è —Å —Ñ–æ—Ä–º—É–ª–æ–π AlPt, –∫—Ä–∏—Å—Ç–∞–ª–ª—ã.", "–ø–ª–∞—Ç–∏–Ω–∞–∞–ª—é–º–∏–Ω–∏–π"),
    ("–ó–∞–∫—Ä—ã—Ç—ã–π —à–∞—Ö–º–∞—Ç–Ω—ã–π –¥–µ–±—é—Ç, –Ω–∞—á–∏–Ω–∞—é—â–∏–π—Å—è —Ö–æ–¥–∞–º–∏:1. d2-d4 d7-d52. c2-c4 c7-c6.–û—Ç–Ω–æ—Å–∏—Ç—Å—è –∫ –∑–∞–∫—Ä—ã—Ç—ã–º –Ω–∞—á–∞–ª–∞–º.",
     "—Å–ª–∞–≤—è–Ω—Å–∫–∞—è –∑–∞—â–∏—Ç–∞"),
    ("–†–∞–∑–≤–∏—Ç–∞—è –ø–ª–µ–º–µ–Ω–Ω–∞—è –Ω–µ–≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω–∞—è –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è –¥—Ä–µ–≤–ª—è–Ω –¥–æ –ø–æ–¥—á–∏–Ω–µ–Ω–∏—è –ö–∏–µ–≤—É.", "–¥–µ—Ä–µ–≤—Å–∫–∞—è –∑–µ–º–ª—è"),
    ("–í—ã–º–µ—Ä—à–∞—è –ø—Ç–∏—Ü–∞ —Å–µ–º–µ–π—Å—Ç–≤–∞ –ø–æ–ø—É–≥–∞–µ–≤—ã—Ö.", "–≤–∏—Ä–≥–∏–Ω—Å–∫–∏–π –∞—Ä–∞"),
    ("–û–¥–Ω–∞ –∏–∑ –∫—Ä–µ–ø–æ—Å—Ç–Ω—ã—Ö –±–∞—à–µ–Ω –°—Ç–∞—Ä–æ–≥–æ –∑–∞–º–∫–∞ –≥–æ—Ä–æ–¥–∞ –ö–∞–º–µ–Ω–µ—Ü-–ü–æ–¥–æ–ª—å—Å–∫–∏–π. –ü–æ—Å—Ç—Ä–æ–µ–Ω–∞ –≤ –∫–æ–Ω—Ü–µ XIV‚ÄîXV –≤–≤.",
     "–ª—è–Ω—Ü–∫–æ—Ä–æ–Ω—Å–∫–∞—è –±–∞—à–Ω—è"),
    ("–ö–∏–Ω–æ–∫–æ–º–µ–¥–∏—è 2004 –≥–æ–¥–∞, —Ä–µ–º–µ–π–∫ –∞–º–µ—Ä–∏–∫–∞–Ω—Å–∫–æ–≥–æ —Ñ–∏–ª—å–º–∞ ¬´–î–µ–Ω—å —Å—É—Ä–∫–∞¬ª.", "—É–∂–µ –≤—á–µ—Ä–∞"),
    ("–ë–∞–±–æ—á–∫–∞ —Å–µ–º–µ–π—Å—Ç–≤–∞ –ö–æ–∫–æ–Ω–æ–ø—Ä—è–¥—ã.", "–∫–æ–∫–æ–Ω–æ–ø—Ä—è–¥ –∑–æ–ª–æ—Ç–∏—Å—Ç—ã–π"),
    ("–†—ã–±–∞ —Å–µ–º–µ–π—Å—Ç–≤–∞ –≤—å—é–Ω–æ–≤—ã–µ.", "–æ–±—ã–∫–Ω–æ–≤–µ–Ω–Ω—ã–π –≤—å—é–Ω"),
    ("–≠—Ç–æ —è–≤–ª–µ–Ω–∏–µ, –ø—Ä–∏ –∫–æ—Ç–æ—Ä–æ–º —Ä–µ–±—ë–Ω–æ–∫ –≤–ª–∞–¥–µ–µ—Ç –¥–≤—É–º—è —è–∑—ã–∫–∞–º–∏, –ø—Ä–∏—á—ë–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —è–∑—ã–∫–æ–≤ –Ω–µ –º–µ—à–∞–µ—Ç –¥—Ä—É–≥ –¥—Ä—É–≥—É.",
     "–¥–µ—Ç—Å–∫–∏–π –±–∏–ª–∏–Ω–≥–≤–∏–∑–º"),
    ("–ü—è—Ç—ã–π —ç–ø–∏–∑–æ–¥ –¥–µ–≤—è—Ç–Ω–∞–¥—Ü–∞—Ç–æ–≥–æ —Å–µ–∑–æ–Ω–∞ –º—É–ª—å—Ç—Å–µ—Ä–∏–∞–ª–∞ ¬´–Æ–∂–Ω—ã–π –ø–∞—Ä–∫¬ª.", "–±–µ–∑–æ–ø–∞—Å–Ω–æ–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ"),
    ("–ü—å–µ—Å–∞ –ê–ª–µ–∫—Å–∞–Ω–¥—Ä–∞ –û—Å—Ç—Ä–æ–≤—Å–∫–æ–≥–æ. –ù–∞–ø–∏—Å–∞–Ω–∞ –≤ 1850 –≥–æ–¥—É.", "–Ω–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Å–ª—É—á–∞–π"),
    ("–ü—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –§—Ä–∏–¥—Ä–∏—Ö–∞ –ù–∏—Ü—à–µ.", "–≤–µ—Å—ë–ª–∞—è –Ω–∞—É–∫–∞"),
    ("–°—Ç–∞–Ω–∏—Ü–∞ –≤ –û—Ç—Ä–∞–¥–Ω–µ–Ω—Å–∫–æ–º —Ä–∞–π–æ–Ω–µ –ö—Ä–∞—Å–Ω–æ–¥–∞—Ä—Å–∫–æ–≥–æ –∫—Ä–∞—è. –í—Ö–æ–¥–∏—Ç –≤ —Å–æ—Å—Ç–∞–≤ –ü–æ–¥–≥–æ—Ä–Ω–æ-–°–∏–Ω—é—Ö–∏–Ω—Å–∫–æ–≥–æ —Å–µ–ª—å—Å–∫–æ–≥–æ –ø–æ—Å–µ–ª–µ–Ω–∏—è.",
     "—Å–ø–æ–∫–æ–π–Ω–∞—è —Å–∏–Ω—é—Ö–∞"),
    ("–û–±—â–∏–Ω–∞ –≤ –ø—Ä–æ–≤–∏–Ω—Ü–∏–∏ –Æ–∂–Ω–∞—è –ì–æ–ª–ª–∞–Ω–¥–∏—è (–ù–∏–¥–µ—Ä–ª–∞–Ω–¥—ã).", "–∫—Ä–æ–º—Å—Ç—Ä–µ–π–µ–Ω"),
]
